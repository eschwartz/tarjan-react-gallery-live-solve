[x] Look through the provided code
[x] Test out existing routes in Postman
[x] Add photos to public/images
  [x] Update data.js w/id, title, desc, path


- [x] GET /gallery in App.js, and save to state and render <img>
- [ ] Render images via `GalleryList` and `GalleryItem`
- [ ] Click image to see description
- [ ] Display number of likes
- [ ] Like button --> PUT /gallery/like/:id
    - Update DOM with latest likes



From Docs....
- Use `axios` to retrieve (`GET`) data from to `/gallery` and store it in `App.js`.
- Create a new **component** for the `GalleryList` and pass it the gallery data stored in `App` via `props`.
    - Iterate (loop over) the list of gallery data
    - Make GalleryItems
- Create a new **component** called `GalleryItem.js` and pass it the individual gallery item via `props`. 
    - Update the `GalleryList` to use this component to display an image.
    - Swap the image with the description on click. Use [conditional rendering](https://reactjs.org/docs/conditional-rendering.html).
    - Display the number likes for each item and include a like button.
    - When the like button is clicked, use `Axios` to update (`PUT`) the like count `/gallery/like/:id`.
    - Update the gallery each time a like button is clicked.



Components:
- App
- GalleryList
- GalleryItem


Already provided:
- GET photos
- PUT photos (like a photo)


Notes:
- no DB in base mode